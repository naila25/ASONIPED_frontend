import { simpleNetwork } from './simpleNetworkConfig';

// Configuraci√≥n centralizada para las URLs del backend
export const BACKEND_CONFIG = {
  // Para desarrollo local
  LOCAL: 'http://localhost:3000',
  
  // Detectar autom√°ticamente el entorno (con cache)
  getCurrentUrl: async () => {
    try {
      // Usar cache si est√° disponible
      const cachedUrl = simpleNetwork.getCurrentUrl();
      if (cachedUrl && cachedUrl !== 'http://localhost:3000') {
        console.log(`üöÄ Usando URL cacheada: ${cachedUrl}`);
        return cachedUrl;
      }

      // Detecci√≥n autom√°tica del backend solo si es necesario
      const backendUrl = await simpleNetwork.getBackendUrl();
      console.log(`üåê Backend detectado autom√°ticamente: ${backendUrl}`);
      return backendUrl;
    } catch (error) {
      console.warn('‚ö†Ô∏è Error en detecci√≥n autom√°tica, usando localhost:', error);
      return BACKEND_CONFIG.LOCAL;
    }
  }
};

// URL base del API - se actualiza autom√°ticamente
let _API_BASE_URL = 'http://localhost:3000';
let _lastUpdate = 0;
const CACHE_DURATION = 5 * 60 * 1000; // 5 minutos

// Funci√≥n para obtener la URL del API con cache optimizado
export const getAPIBaseURL = async (): Promise<string> => {
  try {
    // Verificar si necesitamos actualizar la URL
    const now = Date.now();
    if (now - _lastUpdate < CACHE_DURATION && _API_BASE_URL !== 'http://localhost:3000') {
      console.log(`üöÄ Usando API URL cacheada: ${_API_BASE_URL}`);
      return _API_BASE_URL;
    }

    _API_BASE_URL = await BACKEND_CONFIG.getCurrentUrl();
    _lastUpdate = now;
    return _API_BASE_URL;
  } catch (error) {
    console.warn('‚ö†Ô∏è Usando URL por defecto:', _API_BASE_URL);
    return _API_BASE_URL;
  }
};

// Para compatibilidad con c√≥digo existente
export const API_BASE_URL = _API_BASE_URL;

// Funci√≥n para cambiar manualmente la URL del backend (√∫til para debugging)
export const setBackendUrl = (url: string) => {
  _API_BASE_URL = url;
  _lastUpdate = Date.now();
  simpleNetwork.setBackendUrl(url);
  console.log(`üîß Backend URL cambiada manualmente a: ${url}`);
  return url;
};

// Funci√≥n para forzar nueva detecci√≥n autom√°tica
export const refreshBackendDetection = async () => {
  try {
    const newUrl = await simpleNetwork.refreshDetection();
    _API_BASE_URL = newUrl;
    _lastUpdate = Date.now();
    console.log(`üîÑ Nueva detecci√≥n completada: ${_API_BASE_URL}`);
    return _API_BASE_URL;
  } catch (error) {
    console.error('‚ùå Error en nueva detecci√≥n:', error);
    return _API_BASE_URL;
  }
};
